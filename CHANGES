Revision history

1.2     Pending release

        - Fix feature_branch plugin to properly compare strings against the master job,
          not the entire database

        - Fix parse_pot plugin bug in import mode (language would not be passed back
          in a callback in import mode, causing a DB constraint error)

        - Print nice plural separators and show line breaks in strings in import reports

1.1     April 20, 2016

        - On OS X, expand `~` to the actual `$HOME` path in SQLite DB connection string (#1)

        - Accept multiple `message` entries in append_hint_message plugin (#2)

        - Require JSON::XS (#3)

        - Make serge and tools find their libs when they are symlinked (#4)

        - Fixed: Uppercase letters in language names are unsupported (#5)

        - Accept multiple `command` entries in run_command plugin (#6)

        - parse_android plugin now supports `serge import` mode
          (generates string keys for alignment) (#7)

        - parse_pot plugin now supports `serge import` mode
          (generates string keys for alignment) (#8)

        - Fix performance when `reuse_uncertain` mode is off (#9)

        - parse_xliff plugin now supports `serge import` mode

        - Parsers are now aware when they are used in import mode, and can adjust their
          behavior accordingly; one can now run `serge test-parser --import-mode <...>`
          to test parsers in import mode.

        - Added the ability to specify any arbitrary class name and plugin data for
          `test-parser` command, which allows one to use this command for any
          custom plugins

        - Added support for %OUTFILE% and %OUTPATH% macros in `run_command` plugin;
          other macros like %FILE% now work consistently with the rest of the config code

        - Fixed some tests due to broken source files

        - Fixed a regression with job's `active` parameter not defaulting to `YES`

        - Added `feature_branch` plugin that allows one to add strings from multiple sources
          (branches) and exclude duplicate strings.

        - Added `log_translation` callback that allows one to log/cache translations

        - String context and key is now passed in `can_extract` callback

        - String key is now passed in `get_translation` and `get_translation_pre` callbacks

        - `test_language` plugin now handles URLs better (doesn't try to
          transliterate them), it allows string expansion (disabled by default),
          and transliteration can now be optionally turned off (it is enabled by default)

        - `test_language` plugin now won't generate TS files if its `save_translations`
          option is turned off

        - `completeness` plugin has got a new `bypass_languages` option the allows to
          skip its logic for certain languages (this is primarily useful for
          pseudo-localization, see `test_language` plugin)

        - Caching/lookup algorithm for translations was rewritten, giving a significant
          performance boost when processing new strings, at the expense of loading
          more data into memory (which also can take some time depending on a size of the
          database)

        - Fixed USN-based optimization when generating TS files

        - Fixed TS file content hash-based optimization caused by inconsistent UTF-8 handling
          at file save/load time

        - Fixed text unescaping in XML parser (it is now CDATA-aware and is also applied
          for embedded HTML nodes)

        - Fixed typos in embedded documentation

1.0     October 15, 2015

        * Code published on GitHub *
